// Place your key bindings in this file to override the defaultsauto[]
[
	// explorer
	{
		"key": "r",
		"command": "renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "enter",
		"command": "-renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},

	// {
	// 	"key": "i",
	// 	"command": "explorerCursorUp",
	// 	"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	// },
	// {
	// 	"key": "k",
	// 	"command": "cursorDown",
	// 	"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	// },

	{
		"key": "cmd+d",
		"command": "dictionary.google.translateSelected",
		"when": "editorTextFocus"
	},
	{
		"key": "cmd+[",
		"command": "workbench.action.navigateBack"
	},
	{
		"key": "ctrl+-",
		"command": "-workbench.action.navigateBack"
	},
	{
		"key": "cmd+]",
		"command": "workbench.action.navigateForward"
	},
	{
		"key": "ctrl+shift+-",
		"command": "-workbench.action.navigateForward"
	},
	// git
	{
		"key": "cmd+k",
		"command": "git.commitAll",
		"when": "listFocus && scmProvider == git"
	},
	{
		"key": "cmd+shift+k",
		"command": "git.pushTo",
		"when": "listFocus && scmProvider == git"
	},
	{
		"key": "s",
		"command": "git.stage",
		"when": "listFocus && !inputFocus && scmProvider == git"
	},
	{
		"key": "u",
		"command": "git.unstage",
		"when": "listFocus && !inputFocus && scmProvider == git"
	},
	{
		"key": "i",
		"command": "list.focusUp",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "k",
		"command": "list.focusDown",
		"when": "listFocus && !inputFocus"
	},
	// {
	// 	"key": "cmd+l",
	// 	"command": "list.focusDown",
	// 	"when": "textInputFocus"
	// },
	{
		"key": "cmd+l",
		"command": "cursorBottom",
		"when": "textInputFocus"
	},
	{
		"key": "shift+cmd+enter",
		"command": "workbench.action.maximizeEditor"
	},
	{
		"key": "shift+cmd+left",
		"command": "workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus"
	},
	{
		"key": "alt+cmd+up",
		"command": "-workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus"
	},
	{
		"key": "shift+cmd+right",
		"command": "workbench.action.terminal.focusNextPane",
		"when": "terminalFocus"
	},
	{
		"key": "alt+cmd+right",
		"command": "-workbench.action.terminal.focusNextPane",
		"when": "terminalFocus"
	},
	{
		"key": "cmd+k",
		"command": "workbench.action.terminal.focusNext",
		"when": "terminalFocus"
	},
	{
		"key": "cmd+i",
		"command": "workbench.action.terminal.focusPrevious",
		"when": "terminalFocus"
	},
	// editor
	{
		"key": "shift+space",
		"command": "editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
	},
	// calva
	{
		"key": "shift+tab",
		"command": "calva-fmt.formatCurrentForm",
		"when": "calva:keybindingsEnabled && editorTextFocus && !editorReadOnly && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'clojure'"
	},
	{
		"key": "tab",
		"command": "-calva-fmt.formatCurrentForm",
		"when": "calva:keybindingsEnabled && editorTextFocus && !editorReadOnly && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'clojure'"
	},
	{
		"key": "shift+;",
		"command": "vim.showQuickpickCmdLine",
		"when": "editorTextFocus && vim.mode != 'Insert'"
	}
]

// {
//   "key": "cmd+f",
//   "command": "workbench.action.findInFiles"
// },
// {
//   "key": "shift+cmd+f",
//   "command": "-workbench.action.findInFiles"
// }
// {
//   "key": "shift+cmd+b",
//   "command": "workbench.action.toggleSidebarVisibility"
// },
// {
//   "key": "cmd+b",
//   "command": "-workbench.action.toggleSidebarVisibility"
// }
// {
//   "key": "shift+cmd+p",
//   "command": "workbench.action.quickOpen"
// },
// {
//   "key": "cmd+p",
//   "command": "-workbench.action.quickOpen"
// }
// {
// 	"key": "ctrl+space",
// 	"command": "-editor.action.triggerSuggest",
// 	"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
// },
// workbench

// {
// 	"key": "cmd+w",
// 	"command": "workbench.files.action.closeFile"
// },
// {
// 	"key": "cmd+w",
// 	"command": "workbench.action.closeWindow"
// },

// {
//   "key": "shift+cmd+w",
//   "command": "workbench.action.closeActiveEditor"
// },
// {
//   "key": "cmd+w",
//   "command": "-workbench.action.closeActiveEditor"
// }
// {
//   "key": "shift+cmd+w",
//   "command": "workbench.action.closeWindow",
//   "when": "!editorIsOpen && !multipleEditorGroups"
// },
// {
//   "key": "cmd+w",
//   "command": "-workbench.action.closeWindow",
//   "when": "!editorIsOpen && !multipleEditorGroups"
// }

// {
//   "key": "enter",
//   "command": "explorer.openToSide",
//   "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
// },
// {
//   "key": "shift+cmd+r",
//   "command": "workbench.view.explorer",
//   "when": "viewContainer.workbench.view.explorer.enabled"
// },
// {
//   "key": "shift+cmd+e",
//   "command": "-workbench.view.explorer",
//   "when": "viewContainer.workbench.view.explorer.enabled"
// }
// {
// 	"key": "cmd+shift+[",
// 	"command": "workbench.files.action.openPreviousWorkingFile"
// },
// {
// 	"key": "cmd+shift+]",
// 	"command": "workbench.files.action.openNextWorkingFile"
// },
